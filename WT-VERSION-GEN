#!/bin/bash

WTVG=WT-VERSION-FILE
DEF_VER=v5.0.3.GIT

LF='
'

write_version_file()
{
  VN=$1
  if test -r $WTVG; then
    VC=$(sed -e 's/^WT_VERSION=//' <$WTVG)
  else
    VC=unset
  fi

  test "$VN" = "$VC" || {
    echo >&2 "WT_VERSION=$VN"
    echo "WT_VERSION=$VN" >$WTVG
  }
}

update_libwt_version()
{
  VN=$1
  libwt_version_file="src/libwebtester/version.h"
  vf=`cat ${libwt_version_file}`
  echo "${vf}"  | \
    sed -r "s/#define CORE_VERSION \".*\"/#define CORE_VERSION \"$VN\"/"  > \
      ${libwt_version_file}
}

# First see if there is a version file (included in release tarballs),
# then try git-describe, then default.
if test -f version; then
  VN=$(cat version) || VN="$DEF_VER"
elif test -d .git -o -f .git &&
  VN=$(git describe --abbrev=4 HEAD 2>/dev/null) &&
  case "$VN" in
  *$LF*) (exit 1) ;;
  v[0-9]*)
    git update-index -q --refresh
    test -z "$(git diff-index --name-only HEAD -- | grep -v version.h | \
      grep -v '!config' | grep -v '\stamp-')" ||
    VN="$VN-dirty" ;;
  esac
then
  VN=$(echo "$VN" | sed -e 's/-/./g' | sed -e 's/.\(m[0-9]\)/-\1/');
else
  VN="$DEF_VER"
fi

VN=$(expr "$VN" : v*'\(.*\)')

write_version_file $VN
update_libwt_version $VN
